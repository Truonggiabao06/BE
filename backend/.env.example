# Jewelry Auction System Environment Configuration

# Application Settings
APP_ENV=development
FLASK_ENV=development
DEBUG=true
SECRET_KEY=your-secret-key-change-in-production
JWT_SECRET_KEY=jwt-secret-key-change-in-production

# Database Configuration (SQL Server)
# For SQL Server in Docker container
DB_URL=mssql+pymssql://sa:Aa%40123456@sqlserver:1433/jewelry_auction
# For local development (when running without Docker)
# DB_URL=mssql+pymssql://sa:Aa%40123456@localhost:1433/jewelry_auction

# Docker SQL Server Environment Variables
MSSQL_SA_PASSWORD=Aa@123456
MSSQL_DATABASE=jewelry_auction
ACCEPT_EULA=Y

# Alternative for PostgreSQL in Docker
# DB_URL=postgresql://auction_user:auction_pass@db:5432/jewelry_auction
# POSTGRES_DB=jewelry_auction
# POSTGRES_USER=auction_user
# POSTGRES_PASSWORD=auction_pass

# Timezone and Currency
TZ=Asia/Ho_Chi_Minh
CURRENCY=VND

# API Configuration
API_HOST=0.0.0.0
API_PORT=5000

# Database Connection Pool
DB_POOL_SIZE=10
DB_MAX_OVERFLOW=20
DB_POOL_TIMEOUT=30
DB_POOL_RECYCLE=3600

# JWT Configuration
JWT_SECRET=your-jwt-secret-key-change-in-production

# File Upload Configuration
UPLOAD_FOLDER=uploads
MAX_CONTENT_LENGTH=16777216

# Email Configuration (for notifications)
MAIL_SERVER=smtp.gmail.com
MAIL_PORT=587
MAIL_USE_TLS=true
MAIL_USERNAME=your-email@gmail.com
MAIL_PASSWORD=your-app-password

# CORS Configuration (for frontend)
CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# Logging
LOG_LEVEL=INFO
LOG_FILE=logs/jewelry_auction.log

# Redis Configuration (for caching and pub/sub)
REDIS_URL=redis://localhost:6379/0

# Currency and Timezone
CURRENCY=USD
TZ=UTC

# Payment Gateway Configuration (stubs)
PAYMENT_GATEWAY_URL=https://api.payment-provider.com
PAYMENT_GATEWAY_KEY=your-payment-gateway-key
PAYMENT_GATEWAY_SECRET=your-payment-gateway-secret
PAYMENT_GATEWAY_WEBHOOK_SECRET=your-webhook-secret

# Anti-Sniping Configuration
ANTI_SNIPING_ENABLED=true
ANTI_SNIPING_EXTENSION_SECONDS=300
ANTI_SNIPING_TRIGGER_SECONDS=60

# Rate Limiting
RATE_LIMIT_STORAGE_URL=redis://localhost:6379/1

# File Storage Configuration
STORAGE_TYPE=local
# For S3 (future implementation)
# STORAGE_TYPE=s3
# AWS_ACCESS_KEY_ID=your-aws-access-key
# AWS_SECRET_ACCESS_KEY=your-aws-secret-key
# AWS_S3_BUCKET=your-s3-bucket-name
# AWS_S3_REGION=us-east-1

# Development/Testing
TESTING=False
