from abc import ABC, abstractmethod
from typing import Optional, List
from src.domain.models.user import User

class IUserRepository(ABC):
    @abstractmethod
    def get_by_id(self, user_id:int) -> Optional[User]: ...
    @abstractmethod
    def get_by_username(self, username:str) -> Optional[User]: ...
    @abstractmethod
    def list(self, page:int=1, limit:int=20) -> List[User]: ...
    @abstractmethod
    def create(self, user:User) -> User: ...
    @abstractmethod
    def update(self, user:User) -> User: ...
    @abstractmethod
    def delete(self, user_id:int) -> None: ...
